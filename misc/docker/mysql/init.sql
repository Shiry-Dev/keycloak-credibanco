-- MySQL Script generated by MySQL Workbench
-- seg 30 out 2023 10:22:15
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DirectorioParticipante
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DirectorioParticipante
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DirectorioParticipante` DEFAULT CHARACTER SET utf8 ;
USE `DirectorioParticipante` ;

-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisation` (
  `reference_id` VARCHAR(40) NULL,
  `company_register` VARCHAR(255) NULL,
  `adress_line1` VARCHAR(255) NULL,
  `adress_line2` VARCHAR(255) NULL,
  `city` VARCHAR(255) NULL,
  `country` VARCHAR(255) NULL,
  `registered_name` VARCHAR(255) NULL,
  `postcode` VARCHAR(45) NULL,
  `registration_id` VARCHAR(40) NULL,
  `registration_number` VARCHAR(255) NULL,
  `legal_entity_name` VARCHAR(255) NULL,
  `country_of_registration` VARCHAR(255) NULL,
  `organisation_id` VARCHAR(40) NOT NULL,
  `organisation_name` VARCHAR(255) NULL,
  `parent_organisation_reference` VARCHAR(6535) NULL,
  `requires_participants_terms_and_conditions_signing` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `size` VARCHAR(255) NULL,
  `tags` VARCHAR(1000) NULL,
  PRIMARY KEY (`organisation_id`))
ENGINE = InnoDB
COMMENT = 'AddressLine1	string\nmaxLength: 255\nAddress line 1\n\nAddressLine2	string\nmaxLength: 255\nAddress line 2\n\nCity	string\nmaxLength: 255\nCity\n\nCompanyRegister	string\nmaxLength: 255\nLegal company register for the country, i.e. Companies House\n\nCountry	string\nmaxLength: 255\nCountry\n\nCountryOfRegistration	string\nmaxLength: 255\nCountry of registration for the org\n\nCreatedOn	string\nmaxLength: 30\nJSONDatetime of organisation creation.\n\nLegalEntityName	string\nmaxLength: 255\nLegal Entity name for the org. Usually the same as org name\n\nOrganisationId	OrganisationIdstring\nmaxLength: 40\nminLength: 1\nUnique ID associated with the organisation\n\nOrganisationName	string\nmaxLength: 255\nName of the organisation.\n\nParentOrganisationReference	string\nmaxLength: 65535\nParent Organisation Reference\n\nPostcode	string\nmaxLength: 40\nPostcode\n\nRegisteredName	string\nmaxLength: 255\nRegistrationId	string\nmaxLength: 40\nRegistered ID for the organisation i.e. Legal Entity identifier number\n\nRegistrationNumber	string\nmaxLength: 255\nCompany registration number from company register i.e. Companies House registration number\n\nRequiresParticipantTermsAndConditionsSigning	boolean\ntrue - this organisation requires terms and conditions to be signed. false - this organisation does not require terms and conditions to be signed\n\nSize	string\nmaxLength: 255\nSize of the organisation\n\nStatus	string\ndefault: Active\nStatus of the directory registration of an organisation\n\nEnum:\n[ Active, Pending, Withdrawn ]\nTags	[\nTags to describe or classify an organisation\n\nstring]\n}';


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`authorisation_servers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`authorisation_servers` (
  `authorisation_server_id` VARCHAR(40) NOT NULL,
  `auto_registration_supported` TINYINT NULL DEFAULT 0,
  `auto_registration_webhook_uri` VARCHAR(255) NULL,
  `auto_registration_webhook_subscription_arn` VARCHAR(45) NULL,
  `customer_friendly_description` VARCHAR(255) NULL,
  `customer_friendly_name` VARCHAR(255) NULL,
  `openid_discorvery_document` VARCHAR(45) NULL,
  `developer_portal_uri` VARCHAR(255) NULL,
  `issuer` VARCHAR(45) NULL,
  `parent_authorisation_server_id` VARCHAR(45) NULL,
  `payload_signing_cert_location_uri` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `supports_dcr` VARCHAR(45) NULL,
  `supports_ciba` VARCHAR(45) NULL,
  `terms_of_service_uri` VARCHAR(45) NULL,
  `notifications_webhook` VARCHAR(255) NULL,
  `notifications_subscription_am` VARCHAR(45) NULL,
  `organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`authorisation_server_id`, `organisation_id`),
  INDEX `fk_authorisation_servers_1_idx` (`organisation_id` ASC) VISIBLE,
  CONSTRAINT `fk_authorisation_servers_1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`contacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`contacts` (
  `contact_id` VARCHAR(40) NOT NULL,
  `contact_type` ENUM('Business', 'Technical', 'Billing', 'Incident', 'Security') NULL DEFAULT 'Business',
  `organisation_id` VARCHAR(40) NOT NULL,
  `email_address` VARCHAR(255) NULL,
  `phone_number` VARCHAR(18) NULL,
  `first_name` VARCHAR(255) NULL,
  `last_name` VARCHAR(255) NULL,
  `department` VARCHAR(255) NULL,
  `address_line_1` VARCHAR(255) NULL,
  `address_line_2` VARCHAR(255) NULL,
  `city` VARCHAR(255) NULL,
  `postcode` VARCHAR(40) NULL,
  `country` VARCHAR(255) NULL,
  `status` VARCHAR(45) NULL,
  `additional_information` VARCHAR(255) NULL,
  `pgp_public_key` VARCHAR(45) NULL,
  PRIMARY KEY (`contact_id`, `organisation_id`),
  INDEX `fk_contacts_Organisations1_idx` (`organisation_id` ASC) VISIBLE,
  CONSTRAINT `fk_contacts_Organisations1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`api_resources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`api_resources` (
  `api_resource_id` INT NOT NULL,
  `reference_id` VARCHAR(45) NULL,
  `api_family_type` VARCHAR(128) NULL,
  `api_certification_uri` VARCHAR(500) NULL,
  `date_of_certification_start` VARCHAR(45) NULL,
  `date_of_ certification_expiration` VARCHAR(45) NULL,
  `api_version` VARCHAR(45) NULL,
  `api_family_complete` TINYINT NULL,
  `status` ENUM('Awaiting_Certification', 'Certified', 'Deprecated', 'Rejected', 'Self-Certified') NULL,
  `authorisation_server_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`api_resource_id`, `authorisation_server_id`),
  CONSTRAINT `fk_api_resources_1`
    FOREIGN KEY (`authorisation_server_id`)
    REFERENCES `DirectorioParticipante`.`authorisation_servers` (`authorisation_server_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`api_discovery-endpoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`api_discovery-endpoints` (
  `api_discovery_id` VARCHAR(45) NOT NULL,
  `reference_id` VARCHAR(45) NULL,
  `api_endpoint` VARCHAR(255) NULL,
  `status` VARCHAR(45) NULL,
  `api_resource_id` INT NOT NULL,
  PRIMARY KEY (`api_discovery_id`, `api_resource_id`),
  INDEX `fk_api_discovery-endpoints_1_idx` (`api_resource_id` ASC) VISIBLE,
  CONSTRAINT `fk_api_discovery-endpoints_1`
    FOREIGN KEY (`api_resource_id`)
    REFERENCES `DirectorioParticipante`.`api_resources` (`api_resource_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisation_admin_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisation_admin_user` (
  `organisation_id` VARCHAR(40) NULL,
  `org_admin_user_id` VARCHAR(40) NOT NULL,
  `user_mail` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `organisation_admin_usercol` VARCHAR(45) NULL,
  `organisation_organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`org_admin_user_id`, `organisation_organisation_id`),
  INDEX `fk_organisation_admin_user_organisation1_idx` (`organisation_organisation_id` ASC) VISIBLE,
  CONSTRAINT `fk_organisation_admin_user_organisation1`
    FOREIGN KEY (`organisation_organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisations_terms_and_conditions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisations_terms_and_conditions` (
  `organisation_id` INT NOT NULL,
  `reference_id` VARCHAR(45) NULL,
  `tc_reference_id` VARCHAR(45) NULL,
  `tc_sign_initiated_by` VARCHAR(45) NULL,
  `ess_envelope_id` VARCHAR(45) NULL,
  `ess_envelope_status` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `organisation_organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`organisation_id`, `organisation_organisation_id`),
  INDEX `fk_organisations_terms_and_conditions_organisation1_idx` (`organisation_organisation_id` ASC) VISIBLE,
  CONSTRAINT `fk_organisations_terms_and_conditions_organisation1`
    FOREIGN KEY (`organisation_organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`enumstatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`enumstatus` (
  `campo` VARCHAR(40) NOT NULL,
  `valor` ENUM('Active', 'Suspended', 'Inactive') NULL DEFAULT 'Active' COMMENT 'Active, Pending, Withdrawn ',
  PRIMARY KEY (`campo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisation_authority_domain_claims`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisation_authority_domain_claims` (
  `authority_id` VARCHAR(45) NULL,
  `registration_id` VARCHAR(45) NULL,
  `status` VARCHAR(45) NOT NULL,
  `organisation_authority_domain_claim_id` VARCHAR(45) NOT NULL,
  `authorisation_domain_name` VARCHAR(45) NULL,
  `Organisations_organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`Organisations_organisation_id`, `organisation_authority_domain_claim_id`, `status`),
  INDEX `fk_organisation_authority_domain_claims_Organisations1_idx` (`Organisations_organisation_id` ASC) VISIBLE,
  INDEX `fk_organisation_authority_domain_claims_1_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_organisation_authority_domain_claims_Organisations1`
    FOREIGN KEY (`Organisations_organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_authority_domain_claims_1`
    FOREIGN KEY (`status`)
    REFERENCES `DirectorioParticipante`.`enumstatus` (`campo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisation_authority_domain_role_claims`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisation_authority_domain_role_claims` (
  `Organisation_id` VARCHAR(40) NOT NULL,
  `registration_id` VARCHAR(45) NULL,
  `organisation_authority_claim_id` VARCHAR(45) NULL,
  `status` VARCHAR(45) NOT NULL,
  `authorisation_domain_name` VARCHAR(45) NULL,
  `authorisation_domain_role_name` VARCHAR(60) NULL,
  `Organisations_organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`Organisation_id`, `Organisations_organisation_id`, `status`),
  INDEX `fk_organisation_authority_domain_role_claims_Organisations1_idx` (`Organisations_organisation_id` ASC) VISIBLE,
  INDEX `fk_organisation_authority_domain_role_claims_2_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_organisation_authority_domain_role_claims_Organisations1`
    FOREIGN KEY (`Organisations_organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_authority_domain_role_claims_2`
    FOREIGN KEY (`status`)
    REFERENCES `DirectorioParticipante`.`enumstatus` (`campo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`organisation_certificate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`organisation_certificate` (
  `organisation_id` VARCHAR(40) NOT NULL,
  `reference_id` VARCHAR(45) NULL,
  `jwk_id` VARCHAR(45) NULL,
  `certificate_or_key_type` VARCHAR(45) NULL,
  `expiry_date_time` VARCHAR(45) NULL,
  `key_type` VARCHAR(255) NULL,
  `kid` VARCHAR(255) NULL,
  `kty` VARCHAR(255) NULL,
  `status` VARCHAR(255) NULL,
  `use` VARCHAR(255) NULL,
  `valid_from_date_time` VARCHAR(255) NULL,
  `x5t` VARCHAR(255) NULL,
  `x5t_hash_s256` VARCHAR(255) NULL,
  `Organisations_organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`organisation_id`, `Organisations_organisation_id`),
  INDEX `fk_organisation_certificate_Organisations1_idx` (`Organisations_organisation_id` ASC) VISIBLE,
  CONSTRAINT `fk_organisation_certificate_Organisations1`
    FOREIGN KEY (`Organisations_organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`authorisation_server_certifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`authorisation_server_certifications` (
  `certification_id` VARCHAR(40) NOT NULL,
  `ref_certification_id` VARCHAR(45) NULL,
  `profile_variant` VARCHAR(45) NULL,
  `profile_version` VARCHAR(45) NULL,
  `certification_uri` VARCHAR(45) NULL,
  `authorisation_domain_role_name` VARCHAR(45) NULL,
  `date_certification_start` VARCHAR(45) NULL,
  `date_of_certification_expiration` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `authorisation_server_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`certification_id`, `authorisation_server_id`),
  INDEX `fk_authorization_server_certifications_1_idx` (`authorisation_server_id` ASC) VISIBLE,
  CONSTRAINT `fk_authorization_server_certifications_1`
    FOREIGN KEY (`authorisation_server_id`)
    REFERENCES `DirectorioParticipante`.`authorisation_servers` (`authorisation_server_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`software_statements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`software_statements` (
  `software_statement_id` VARCHAR(45) NOT NULL,
  `reference_id` VARCHAR(40) NULL,
  `client_id` VARCHAR(40) NULL,
  `client_name` VARCHAR(255) NULL,
  `client_uri` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `environment` VARCHAR(40) NULL,
  `logo_uri` VARCHAR(255) NULL,
  `mode` ENUM('Live', 'Test') NULL DEFAULT 'Live',
  `on_behalf_of` VARCHAR(255) NULL,
  `policy_uri` VARCHAR(255) NULL,
  `status` VARCHAR(45) NOT NULL,
  `terms_of_service_uri` VARCHAR(255) NULL,
  `version` VARCHAR(40) NULL,
  `client_management_token` VARCHAR(45) NULL,
  `locked` TINYINT NULL,
  `organisation_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`software_statement_id`, `organisation_id`, `status`),
  INDEX `fk_software_statements_1_idx` (`organisation_id` ASC) VISIBLE,
  INDEX `fk_software_statements_2_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_software_statements_1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `DirectorioParticipante`.`organisation` (`organisation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_software_statements_2`
    FOREIGN KEY (`status`)
    REFERENCES `DirectorioParticipante`.`enumstatus` (`campo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`software_statements_certifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`software_statements_certifications` (
  `certification_id` VARCHAR(40) NOT NULL,
  `ref_certification_id` VARCHAR(45) NULL,
  `profile_variant` VARCHAR(45) NULL,
  `profile_version` VARCHAR(45) NULL,
  `certification_uri` VARCHAR(500) NULL,
  `date_of_certification_start` VARCHAR(45) NULL,
  `certification_status` ENUM('Awaiting_Certification', 'Certified', 'Deprecated', 'Rejected', 'Self-Certified') NULL DEFAULT 'Awaiting_Certification',
  `organisation_id` VARCHAR(40) NULL,
  `status` VARCHAR(45) NOT NULL,
  `software_statement_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`certification_id`, `software_statement_id`, `status`),
  INDEX `fk_software_statements_certifications_1_idx` (`software_statement_id` ASC) VISIBLE,
  INDEX `fk_software_statements_certifications_2_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_software_statements_certifications_1`
    FOREIGN KEY (`software_statement_id`)
    REFERENCES `DirectorioParticipante`.`software_statements` (`software_statement_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_software_statements_certifications_2`
    FOREIGN KEY (`status`)
    REFERENCES `DirectorioParticipante`.`enumstatus` (`campo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`software_statement_domain_authority_roles_claims`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`software_statement_domain_authority_roles_claims` (
  `software_authority_claim_id` VARCHAR(40) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `authorisation_domain_name` VARCHAR(45) NULL,
  `authorisation_domain_role_name` VARCHAR(60) NULL,
  `software_statement_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`software_authority_claim_id`, `software_statement_id`, `status`),
  INDEX `fk_software_statement_domain_authority_roles_claims_1_idx` (`software_statement_id` ASC) VISIBLE,
  INDEX `fk_software_statement_domain_authority_roles_claims_2_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_software_statement_domain_authority_roles_claims_1`
    FOREIGN KEY (`software_statement_id`)
    REFERENCES `DirectorioParticipante`.`software_statements` (`software_statement_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_software_statement_domain_authority_roles_claims_2`
    FOREIGN KEY (`status`)
    REFERENCES `DirectorioParticipante`.`enumstatus` (`campo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DirectorioParticipante`.`software_statements_certificate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DirectorioParticipante`.`software_statements_certificate` (
  `client_name` VARCHAR(40) NULL,
  `status` VARCHAR(40) NULL,
  `valid_from_date_time` VARCHAR(30) NULL,
  `expiry_date_time` VARCHAR(30) NULL,
  `e` VARCHAR(255) NULL,
  `key_type` VARCHAR(255) NULL,
  `kid` VARCHAR(255) NULL,
  `kty` VARCHAR(255) NULL,
  `n` VARCHAR(255) NULL,
  `use` VARCHAR(255) NULL,
  `x5c` VARCHAR(255) NULL,
  `x5t` VARCHAR(255) NULL,
  `x5t_hash_s256` VARCHAR(255) NULL,
  `x5u` VARCHAR(255) NULL,
  `signed_cert_path` VARCHAR(255) NULL,
  `jwk_path` VARCHAR(255) NULL,
  `org_jwk_path` VARCHAR(255) NULL,
  `organisation_id` VARCHAR(40) NULL,
  `software_statement_id` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`software_statement_id`),
  INDEX `fk_software_statements_certificate_1_idx` (`software_statement_id` ASC) VISIBLE,
  CONSTRAINT `fk_software_statements_certificate_1`
    FOREIGN KEY (`software_statement_id`)
    REFERENCES `DirectorioParticipante`.`software_statements` (`software_statement_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
